---
name: ci

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main
  # Run tests for PRs
  pull_request:

env:
  GO_VERSION: 1.23
  GO_RELEASER_VERSION: v2.8.2
  GO_LANGCI_LINT_VERSION: v2.0.2
  GO_TESTSUM_VERSION: 1.12.1

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module:
          - .
          - middleware/ginz
          - middleware/gorillaz
          - middleware/grpcz
          - middleware/httpz
    steps:
      -
        uses: actions/checkout@v4
      -
        name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      -
        name: Lint ginz
        uses: golangci/golangci-lint-action@v7
        with:
          version: ${{ env.GO_LANGCI_LINT_VERSION }}
          args: --timeout=5m
          working-directory: ${{ matrix.module }}
  test:
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@v4
      -
        name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      -
        name: Test Setup
        uses: gertd/action-gotestsum@v3.0.0
        with:
          gotestsum_version: ${{ env.GO_TESTSUM_VERSION }}
      -
        name: Test
        run: |
          gotestsum --format short-verbose -- -count=1 -v -timeout=240s -coverprofile=cover.out -coverpkg=./... ./...
      -
        name: Build Examples
        uses: goreleaser/goreleaser-action@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          distribution: goreleaser
          version: ${{ env.GO_RELEASER_VERSION }}
          args: build --clean --snapshot --single-target
      -
        name: Upload code coverage
        uses: shogo82148/actions-goveralls@v1
        continue-on-error: true
        with:
          path-to-profile: cover.out

  release:
    needs: [test]
    runs-on: ubuntu-latest
    # Only release when ref is a tag
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      -
        uses: actions/checkout@v4
      -
        name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      -
        name: Setup QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Release
        uses: goreleaser/goreleaser-action@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          distribution: goreleaser
          version: ${{ env.GO_RELEASER_VERSION }}
          args: release --clean
